{
  "CISettings": {
    "GeneralSettings": {
      "PipelineName": "KeyForge CI/CD Pipeline",
      "TriggerBranches": ["main", "develop", "feature/*"],
      "TriggerPaths": ["**/*.cs", "**/*.csproj", "**/*.json"],
      "SkipPaths": ["**/docs/**", "**/README.md", "**/*.md"],
      "TimeoutMinutes": 60,
      "Pool": "ubuntu-latest",
      "EnableParallelJobs": true,
      "MaxParallelJobs": 4
    },
    "BuildSettings": {
      "Configuration": "Release",
      "Platform": "x64",
      "RestoreDependencies": true,
      "BuildSolution": true,
      "RunCodeAnalysis": true,
      "GenerateDocumentation": true,
      "PublishArtifacts": true,
      "ArtifactName": "KeyForge-Build",
      "ArtifactPath": "publish/"
    },
    "TestSettings": {
      "RunUnitTests": true,
      "RunIntegrationTests": true,
      "RunPerformanceTests": true,
      "RunSecurityTests": true,
      "RunE2ETests": true,
      "TestFramework": "xunit",
      "TestLogger": "xunit",
      "CollectCoverage": true,
      "MinimumCoverage": 80.0,
      "FailOnLowCoverage": true,
      "GenerateTestReport": true,
      "PublishTestResults": true,
      "TestResultsFile": "TestResults.xml"
    },
    "CodeQualitySettings": {
      "EnableCodeAnalysis": true,
      "EnableStyleCop": true,
      "EnableSecurityAnalysis": true,
      "EnablePerformanceAnalysis": true,
      "TreatWarningsAsErrors": true,
      "AnalysisLevel": "latest",
      "RulesetFile": "code-analysis.ruleset",
      "StyleCopFile": "stylecop.json",
      "MaxWarnings": 0,
      "FailOnWarnings": true
    },
    "SecuritySettings": {
      "RunSecurityScan": true,
      "RunVulnerabilityScan": true,
      "RunDependencyScan": true,
      "RunSecretScan": true,
      "SecurityTools": ["OWASP ZAP", "SecurityCodeScan", "SonarQube"],
      "FailOnSecurityIssues": true,
      "GenerateSecurityReport": true,
      "PublishSecurityReport": true
    },
    "PerformanceSettings": {
      "RunPerformanceTests": true,
      "RunLoadTests": true,
      "RunStressTests": true,
      "PerformanceThreshold": {
        "MaxResponseTime": 1000,
        "MaxMemoryUsage": 512,
        "MaxCpuUsage": 80,
        "MinThroughput": 100
      },
      "GeneratePerformanceReport": true,
      "PublishPerformanceReport": true
    },
    "DeploymentSettings": {
      "EnableDeployment": true,
      "DeploymentEnvironments": ["Staging", "Production"],
      "DeploymentStrategy": "BlueGreen",
      "HealthCheckEndpoint": "/health",
      "HealthCheckTimeout": 30,
      "RollbackOnFailure": true,
      "DeploymentNotification": true
    },
    "NotificationSettings": {
      "EnableNotifications": true,
      "EmailNotifications": {
        "Enable": true,
        "Recipients": ["team@example.com", "dev@example.com"],
        "OnSuccess": true,
        "OnFailure": true,
        "OnWarning": true
      },
      "SlackNotifications": {
        "Enable": true,
        "WebhookUrl": "${SLACK_WEBHOOK_URL}",
        "Channel": "#ci-cd",
        "OnSuccess": true,
        "OnFailure": true,
        "OnWarning": true
      },
      "TeamsNotifications": {
        "Enable": true,
        "WebhookUrl": "${TEAMS_WEBHOOK_URL}",
        "OnSuccess": true,
        "OnFailure": true,
        "OnWarning": true
      }
    },
    "EnvironmentSettings": {
      "Variables": {
        "DOTNET_VERSION": "8.0.x",
        "NODE_VERSION": "18.x",
        "BUILD_CONFIGURATION": "Release",
        "SONAR_TOKEN": "${SONAR_TOKEN}",
        "COVERALLS_TOKEN": "${COVERALLS_TOKEN}",
        "NUGET_API_KEY": "${NUGET_API_KEY}"
      },
      "Secrets": [
        "SONAR_TOKEN",
        "COVERALLS_TOKEN",
        "NUGET_API_KEY",
        "SLACK_WEBHOOK_URL",
        "TEAMS_WEBHOOK_URL",
        "DEPLOYMENT_PASSWORD"
      ]
    },
    "ArtifactsSettings": {
      "BuildArtifacts": {
        "Enable": true,
        "Name": "KeyForge-Build",
        "Path": "publish/",
        "RetentionDays": 30
      },
      "TestArtifacts": {
        "Enable": true,
        "Name": "KeyForge-Tests",
        "Path": "TestResults/",
        "RetentionDays": 30
      },
      "CoverageArtifacts": {
        "Enable": true,
        "Name": "KeyForge-Coverage",
        "Path": "coverage/",
        "RetentionDays": 30
      },
      "DocumentationArtifacts": {
        "Enable": true,
        "Name": "KeyForge-Docs",
        "Path": "docs/",
        "RetentionDays": 30
      }
    },
    "CacheSettings": {
      "EnableCache": true,
      "NugetCache": {
        "Enable": true,
        "Path": "$(Pipeline.Workspace)/.nuget/packages",
        "Key": 'nuget | "$(Agent.OS)" | "$(BuildConfiguration)"'
      },
      "NodeModulesCache": {
        "Enable": true,
        "Path": "$(Pipeline.Workspace)/node_modules",
        "Key": 'node | "$(Agent.OS)"'
      },
      "DotnetCache": {
        "Enable": true,
        "Path": "$(Pipeline.Workspace)/.dotnet",
        "Key": 'dotnet | "$(Agent.OS)" | "$(DOTNET_VERSION)"'
      }
    },
    "MatrixSettings": {
      "EnableMatrix": true,
      "Dimensions": {
        "os": ["ubuntu-latest", "windows-latest", "macos-latest"],
        "dotnet": ["8.0.x", "7.0.x"],
        "configuration": ["Debug", "Release"]
      },
      "Exclude": [
        {
          "os": "macos-latest",
          "dotnet": "7.0.x"
        },
        {
          "configuration": "Debug",
          "os": "windows-latest"
        }
      ]
    },
    "StageSettings": {
      "Stages": [
        {
          "Name": "Build",
          "DisplayName": "Build and Test",
          "Jobs": [
            {
              "Name": "Build",
              "Steps": [
                "Checkout",
                "SetupDotnet",
                "RestoreDependencies",
                "BuildSolution",
                "RunUnitTests",
                "RunIntegrationTests",
                "RunCodeAnalysis",
                "CollectCoverage",
                "GenerateReports"
              ]
            }
          ]
        },
        {
          "Name": "Quality",
          "DisplayName": "Quality Checks",
          "DependsOn": ["Build"],
          "Jobs": [
            {
              "Name": "SecurityScan",
              "Steps": ["RunSecurityScan", "RunVulnerabilityScan"]
            },
            {
              "Name": "PerformanceTest",
              "Steps": ["RunPerformanceTests", "RunLoadTests"]
            }
          ]
        },
        {
          "Name": "Deploy",
          "DisplayName": "Deploy to Staging",
          "DependsOn": ["Quality"],
          "Condition": "eq(variables['Build.SourceBranch'], 'refs/heads/main')",
          "Jobs": [
            {
              "Name": "DeployStaging",
              "Steps": ["DeployToStaging", "RunSmokeTests"]
            }
          ]
        }
      ]
    },
    "IntegrationSettings": {
      "SonarQube": {
        "Enable": true,
        "Url": "${SONARQUBE_URL}",
        "Token": "${SONAR_TOKEN}",
        "ProjectKey": "keyforge",
        "ProjectName": "KeyForge",
        "Branch": "$(Build.SourceBranch)",
        "QualityGate": true,
        "FailOnQualityGate": true
      },
      "Coveralls": {
        "Enable": true,
        "Token": "${COVERALLS_TOKEN}",
        "ServiceName": "github-actions",
        "ServiceJobId": "$(Build.BuildId)"
      },
      "Codecov": {
        "Enable": true,
        "Token": "${CODECOV_TOKEN}",
        "File": "coverage/coverage.xml"
      },
      "Nuget": {
        "Enable": true,
        "ApiKey": "${NUGET_API_KEY}",
        "Source": "https://api.nuget.org/v3/index.json",
        "PublishCondition": "eq(variables['Build.SourceBranch'], 'refs/heads/main')"
      }
    },
    "MonitoringSettings": {
      "EnableMonitoring": true,
      "HealthChecks": {
        "Enable": true,
        "Endpoints": ["/health", "/health/ready", "/health/live"],
        "Timeout": 30,
        "Interval": 60
      },
      "Metrics": {
        "Enable": true,
        "CollectBuildMetrics": true,
        "CollectTestMetrics": true,
        "CollectPerformanceMetrics": true,
        "CollectSecurityMetrics": true
      },
      "Alerts": {
        "Enable": true,
        "BuildFailure": true,
        "TestFailure": true,
        "LowCoverage": true,
        "SecurityIssues": true,
        "PerformanceDegradation": true
      }
    }
  }
}