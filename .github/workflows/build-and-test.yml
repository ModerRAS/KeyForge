name: Build and Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'KeyForge-Simplified.sln'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['8.0.x']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --no-restore
      
    - name: Run unit tests
      run: dotnet test KeyForge.Tests/KeyForge.Tests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --results-directory TestResults
      
    - name: Run integration tests
      run: dotnet test KeyForge.CrossPlatformTests/KeyForge.CrossPlatformTests.csproj --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --results-directory TestResults
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: TestResults/
        
    - name: Generate coverage report
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet tool install -g dotnet-coverage
        dotnet-coverage collect 'dotnet test KeyForge.Tests/KeyForge.Tests.csproj --configuration Release --no-build' -f xml -o 'coverage.xml'
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-ui:
    name: UI Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}
      
    - name: Build UI project
      run: dotnet build KeyForge.UI/KeyForge.UI.csproj --configuration Release
      
    - name: Run UI tests (Windows only)
      if: matrix.os == 'windows-latest'
      run: dotnet test KeyForge.UI/KeyForge.UI.csproj --configuration Release --logger "trx;LogFileName=ui-test-results.trx" --results-directory TestResults
      
    - name: Upload UI test results
      uses: actions/upload-artifact@v4
      if: always() && matrix.os == 'windows-latest'
      with:
        name: ui-test-results-${{ matrix.os }}
        path: TestResults/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Run security audit
      run: |
        dotnet restore ${{ env.SOLUTION_FILE }}
        dotnet list package --include-transitive | grep -E "(vulnerable|security)" || echo "No known vulnerabilities found"
        
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: csharp
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2